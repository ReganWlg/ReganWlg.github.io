{"meta":{"title":"王理庚的博客","subtitle":"","description":"","author":"王理庚","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"hexo博客创建、部署到本地及云端","slug":"hexo博客创建、部署到本地及云端","date":"2020-10-07T11:21:03.000Z","updated":"2020-10-07T13:39:32.293Z","comments":true,"path":"2020/10/07/hexo博客创建、部署到本地及云端/","link":"","permalink":"http://yoursite.com/2020/10/07/hexo%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA%E3%80%81%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%AC%E5%9C%B0%E5%8F%8A%E4%BA%91%E7%AB%AF/","excerpt":"创建hexo n &quot;博客名&quot; 或者 hexo new &quot;博客名&quot;部署到本地hexo clean 这句可以没有 hexo g 或者 hexo generate本地查看","text":"创建hexo n &quot;博客名&quot; 或者 hexo new &quot;博客名&quot;部署到本地hexo clean 这句可以没有 hexo g 或者 hexo generate本地查看hexo s 或者 hexo server部署到云端hexo d 或者 hexo deploy","categories":[],"tags":[]},{"title":"数据结构--线性表","slug":"数据结构-线性表","date":"2020-10-07T11:02:00.000Z","updated":"2020-10-07T13:38:07.789Z","comments":true,"path":"2020/10/07/数据结构-线性表/","link":"","permalink":"http://yoursite.com/2020/10/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%BA%BF%E6%80%A7%E8%A1%A8/","excerpt":"线性表的定义和基本操作线性表的特点 表中元素的个数有限。 表中元素具有逻辑上的顺序性，表中元素有其先后次序。 表中元素都是数据元素，每个元素都是单个元素。 表中元素的数据类型都相同，这意味着每个元素占有相同大小的存储空间。 表中元素具有抽象性，即仅讨论元素间的逻辑关系，而不考虑元素究竟表示什么内容。 线性表的基本操作 InitList(&amp;L)：初始化表。 Length(L)：求表长。 LocateElem(L, e)：按值查找。查找给定关键字值的元素 GetElem(L, i)：按位查找。获取第i个位置的元素的值 ListInsert(&amp;L, i, e)：插入操作。在第i个位置上插入指定元素e。 ListDelete(&amp;L, i, &amp;e)：删除操作。删除第i个位置的元素，并用e返回删除元素的值。 PrintList(L)：输出操作。顺序输出所有元素值。 Empty(L)：判空操作。若L为空表，则返回true，否则返回false。 DestroyList(&amp;L)：销毁操作。销毁线性表，并释放线性表L所占用的内存空间。","text":"线性表的定义和基本操作线性表的特点 表中元素的个数有限。 表中元素具有逻辑上的顺序性，表中元素有其先后次序。 表中元素都是数据元素，每个元素都是单个元素。 表中元素的数据类型都相同，这意味着每个元素占有相同大小的存储空间。 表中元素具有抽象性，即仅讨论元素间的逻辑关系，而不考虑元素究竟表示什么内容。 线性表的基本操作 InitList(&amp;L)：初始化表。 Length(L)：求表长。 LocateElem(L, e)：按值查找。查找给定关键字值的元素 GetElem(L, i)：按位查找。获取第i个位置的元素的值 ListInsert(&amp;L, i, e)：插入操作。在第i个位置上插入指定元素e。 ListDelete(&amp;L, i, &amp;e)：删除操作。删除第i个位置的元素，并用e返回删除元素的值。 PrintList(L)：输出操作。顺序输出所有元素值。 Empty(L)：判空操作。若L为空表，则返回true，否则返回false。 DestroyList(&amp;L)：销毁操作。销毁线性表，并释放线性表L所占用的内存空间。 线性表的顺序表示顺序表的定义线性表的顺序存储又称顺序表。它的特点是表中元素的逻辑顺序与其物理顺序相同。 静态分配12345#define MaxSize 50 // 线性表最大长度typedef struct &#123; ElemType data[MaxSize]; // 顺序表的元素 int length; // 顺序表的当前长度&#125; SqList; 动态分配123456#define InitSize 100 // 表长度的初始定义typedef struct &#123; ElemType *data; // 指示动态分配数组的指针 int MaxSize; // 数组的最大容量 int length; // 数组的当前长度&#125; SeqList; C语言的初始动态分配语句为 1L.data = (ElemType*)malloc(sizeof(ElemType) * InitSize); C++的初始动态分配语句为 1L.data = new ElemType[InitSize]; 顺序表最主要的特点是随机访问，即通过首地址和元素符号可在时间O(1)内找到指定的元素。 顺序表的存储密度高，每个结点只存储数据元素。 顺序表逻辑上相邻的元素物理上也相邻，所以插入和删除操作需要移动大量元素。 顺序表上基本操作的实现插入操作注意：在顺序表的第i个位置插入新元素e，此时下标应该是i-1 12345678910111213bool ListInsert(SqList &amp;L, int i, ElemType e) &#123; if (i &lt; 1 || i &gt; L.length + 1) return false; if (L.length &gt;= MaxSize) return false; int j; for (j = L.length; j &gt;= i; j--) &#123; L.data[j] = L.data[j - 1]; &#125; L.data[i - 1] = e; L.length++; return true;&#125; 顺序表插入算法的平均时间复杂度为O(n)。 删除操作1234567891011bool ListDelete(SqList &amp;L, int i, ElemType &amp;e) &#123; if (i &lt; 1 || i &gt; L.length + 1) return false; e = L.data[i - 1]; int j; for (j = i; j &lt; L.length; j++) &#123; L.data[j] = L.data[j + 1]; &#125; L.length--; return true;&#125; 顺序表删除算法的平均时间复杂度为O(n)。 按值查找（顺序查找）注意：若查到下标为i的是结果，则返回的位序是i+1 12345678int LocateElem(SqList L, ElemType e) &#123; int i; for (i = 0; i &lt; L.length; i++) &#123; if (L.data[i] == e) return i + 1; &#125; return 0;&#125; 顺序表按值查找算法的平均时间复杂度为O(n)。 线性表的链式表示","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-04-15T08:26:34.261Z","updated":"2020-03-11T05:41:20.000Z","comments":true,"path":"2020/04/15/hello-world/","link":"","permalink":"http://yoursite.com/2020/04/15/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"使用IntelliJ IDEA创建Vue项目","slug":"使用Intelli-IDEA创建Vue项目","date":"2020-03-17T08:33:13.000Z","updated":"2020-03-17T13:41:48.000Z","comments":true,"path":"2020/03/17/使用Intelli-IDEA创建Vue项目/","link":"","permalink":"http://yoursite.com/2020/03/17/%E4%BD%BF%E7%94%A8Intelli-IDEA%E5%88%9B%E5%BB%BAVue%E9%A1%B9%E7%9B%AE/","excerpt":"一、创建项目 打开IntelliJ IDEA创建一个Static Web项目 打开Termital终端，输入 1vue -V 可以检查vue版本 二、安装项目 在终端中输入 1vue init webpack VueDemo 共九个配置项 123456789? Project name vuedemo? Project description A Vue.js project? Author ReganWlg &lt;1959411673@qq.com&gt;? Vue build standalone? Install vue-router? Yes? Use ESLint to lint your code? No? Set up unit tests No? Setup e2e tests with Nightwatch? No? Should we run &#96;npm install&#96; for you after the project has been created? (recommended) no 前5个直接回车回车回车，后4个no 进入项目目录 1cd VueDemo 初始化项目 1npm install 运行项目 1cnpm run dev 打开http://localhost:8080","text":"一、创建项目 打开IntelliJ IDEA创建一个Static Web项目 打开Termital终端，输入 1vue -V 可以检查vue版本 二、安装项目 在终端中输入 1vue init webpack VueDemo 共九个配置项 123456789? Project name vuedemo? Project description A Vue.js project? Author ReganWlg &lt;1959411673@qq.com&gt;? Vue build standalone? Install vue-router? Yes? Use ESLint to lint your code? No? Set up unit tests No? Setup e2e tests with Nightwatch? No? Should we run &#96;npm install&#96; for you after the project has been created? (recommended) no 前5个直接回车回车回车，后4个no 进入项目目录 1cd VueDemo 初始化项目 1npm install 运行项目 1cnpm run dev 打开http://localhost:8080 三、配置IDEA File - Settings - Languages&amp;Frameworks - JavaScript: 修改JavaScript language为ECMAScript 6 Run - Edit Configurations…: 点击加号，选择npm，Name为dev，package.json选择工程中的package.json，Command为run，Scripts为dev，然后就可以直接在IDEA中运行了 再点击加号，选择npm，Name为build，package.json选择工程中的package.json，Command为run，Scripts为build，然后就可以直接在IDEA中打包了","categories":[],"tags":[]},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2020-03-11T06:22:14.000Z","updated":"2020-03-11T06:29:06.000Z","comments":true,"path":"2020/03/11/我的第一篇博客文章/","link":"","permalink":"http://yoursite.com/2020/03/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"第一章内容 第二章内容","text":"第一章内容 第二章内容 参考文献www.codesheep.cn","categories":[],"tags":[]}],"categories":[],"tags":[]}